// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: queries.sql

package utils

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const addDebt = `-- name: AddDebt :one
INSERT INTO debts (
    id, amount, description, date, user_id
) VALUES (
    $1, $2, $3, $4, $5
) RETURNING id, amount, description, date, user_id
`

type AddDebtParams struct {
	ID          int32
	Amount      int32
	Description string
	Date        pgtype.Date
	UserID      pgtype.Int4
}

func (q *Queries) AddDebt(ctx context.Context, arg AddDebtParams) (Debt, error) {
	row := q.db.QueryRow(ctx, addDebt,
		arg.ID,
		arg.Amount,
		arg.Description,
		arg.Date,
		arg.UserID,
	)
	var i Debt
	err := row.Scan(
		&i.ID,
		&i.Amount,
		&i.Description,
		&i.Date,
		&i.UserID,
	)
	return i, err
}

const getDebt = `-- name: GetDebt :one
SELECT id, amount, description, date, user_id FROM debts
WHERE id = $1 LIMIT 1
`

func (q *Queries) GetDebt(ctx context.Context, id int32) (Debt, error) {
	row := q.db.QueryRow(ctx, getDebt, id)
	var i Debt
	err := row.Scan(
		&i.ID,
		&i.Amount,
		&i.Description,
		&i.Date,
		&i.UserID,
	)
	return i, err
}
